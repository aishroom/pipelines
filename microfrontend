pipeline {
    agent any

    tools {
        nodejs '18.16.0'
    }
    
    stages {     
        stage('Install Dependencies') {
            steps {
                sh 'node -v'
                sh 'npm -v'
                sh 'npm i'
            }
        }
    
        stage('Unit Tests') {
            steps {
                sh 'npm test'
            }
        }

        stage('Code Analysis') {
            steps {
                script {
                    def scannerHome = tool 'SonarScanner'
                    withSonarQubeEnv('SonarCloud') {
                        sh "${scannerHome}/bin/sonar-scanner"
                    }
                    sleep 10
                    def qg = waitForQualityGate()
                    echo "Quality Gate status: ${qg.status}"
                    if (qg.status != 'OK' && qg.status != 'NONE') {
                        error "Pipeline aborted due to Quality Gate failure: ${qg.status}"
                    }
                }
           }
        }

        stage('Deploy GitHub') {
            when {
                expression { 
                    return env.BRANCH_NAME == 'master'
                }
            }
            steps {
                script{
                        withCredentials([
                            usernamePassword(
                                credentialsId: 'github-jenkins-unicauca',
                                usernameVariable: 'GIT_USERNAME',
                                passwordVariable: 'GIT_PASSWORD'
                            ),
                            string(credentialsId: '	token_github', variable: 'tokenGitHub')
                        ]) {
                            def jobName = env.JOB_NAME
                            def repoName = jobName.split('/')[1]
                            sh "git remote set-url origin https://${GIT_USERNAME}:${tokenGitHub}@github.com/aishroom/${repoName}"
                            sh 'npm run deploy'
                        }
                }
            }   

        }
    }
}
